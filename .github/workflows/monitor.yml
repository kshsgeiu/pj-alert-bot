name: PJ Alert Bot

on:
  schedule:
    # 매 15분마다 실행 (GitHub Actions 무료 티어에서 안정적)
    - cron: '*/15 * * * *'
  
  # 수동 실행 가능
  workflow_dispatch:
  
  # 푸시할 때도 테스트 실행
  push:
    branches: [ main, master ]

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    # GitHub Actions에 쓰기 권한 부여
    permissions:
      contents: write
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      with:
        # 캐시 파일 커밋을 위해 토큰 사용
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 cloudscraper
    
    - name: 상품 모니터링 실행
      id: monitor
      run: python pj_monitor.py
      env:
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
        TG_CHAT: ${{ secrets.TG_CHAT }}
    
    - name: 텔레그램 상태 알림 (매번 실행)
      run: |
        # 현재 시간
        CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S')
        
        # 변화가 있는 경우
        if [ -f "alert.txt" ]; then
          ALERT_MESSAGE=$(cat alert.txt)
          echo "🔥 변화 감지 알림:"
          echo "$ALERT_MESSAGE"
          
          curl -X POST "https://api.telegram.org/bot${{ secrets.TG_TOKEN }}/sendMessage" \
            -F chat_id="${{ secrets.TG_CHAT }}" \
            -F text="$ALERT_MESSAGE" \
            -F parse_mode="Markdown" \
            -F disable_web_page_preview=true
        else
          # 변화가 없어도 상태 리포트 발송
          STATUS_MESSAGE="✅ PJ Bot 상태 리포트
          
📊 모니터링 완료
• 시간: $CURRENT_TIME  
• 상태: 정상 동작 중
• 변화: 없음 (모든 상품 품절 상태 유지)

🔍 현재 감시 중
• Pointless Journey 전체 상품
• 신상품 출시 감지  
• 재입고 알림 대기

⏰ 다음 체크: 15분 후"

          echo "📊 상태 리포트 발송:"
          echo "$STATUS_MESSAGE"
          
          curl -X POST "https://api.telegram.org/bot${{ secrets.TG_TOKEN }}/sendMessage" \
            -F chat_id="${{ secrets.TG_CHAT }}" \
            -F text="$STATUS_MESSAGE" \
            -F parse_mode="Markdown" \
            -F disable_web_page_preview=true
        fi
    
    - name: Git 설정
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: 캐시 파일 커밋
      run: |
        if [ -f "cache.json" ]; then
          git add cache.json
          if git diff --staged --quiet; then
            echo "캐시 변화 없음"
          else
            git commit -m "캐시 업데이트: $(date '+%Y-%m-%d %H:%M:%S')"
            git push
          fi
        fi
      continue-on-error: true
    
    - name: 실행 결과 로그
      run: |
        echo "=== 모니터링 완료 ==="
        echo "시간: $(date)"
        echo "상태: ${{ steps.monitor.outputs.has_changes }}"
        if [ -f "cache.json" ]; then
          echo "캐시 크기: $(wc -l < cache.json) 줄"
        fi