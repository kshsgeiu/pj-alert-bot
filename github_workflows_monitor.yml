name: PJ Alert Bot

on:
  schedule:
    - cron: '*/9 * * * *'
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  monitor:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 cloudscraper

    - name: 상품 모니터링 실행
      id: monitor
      run: python pj_monitor.py
      env:
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
        TG_CHAT: ${{ secrets.TG_CHAT }}

    - name: 텔레그램 알림 발송 (신상품/재입고 감지 시에만)
      if: ${{ exists('alert.txt') }}
      run: |
        ALERT_MESSAGE=$(cat alert.txt)
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_TOKEN }}/sendMessage" \
          -F chat_id="${{ secrets.TG_CHAT }}" \
          -F text="$ALERT_MESSAGE" \
          -F parse_mode="Markdown" \
          -F disable_web_page_preview=true

    - name: Git 설정
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: 캐시 파일 커밋
      run: |
        if [ -f "cache.json" ]; then
          git add cache.json
          if git diff --staged --quiet; then
            echo "캐시 변화 없음"
          else
            git commit -m "캐시 업데이트: $(date '+%Y-%m-%d %H:%M:%S')"
            git push
          fi
        fi
      continue-on-error: true

    - name: 실행 결과 로그
      run: |
        echo "=== 모니터링 완료 ==="
        echo "시간: $(date)"
        if [ -f "cache.json" ]; then
          echo "캐시 크기: $(wc -l < cache.json) 줄"
        fi
